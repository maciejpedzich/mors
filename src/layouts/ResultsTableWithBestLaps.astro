---
import { asc, and, eq, gt, inArray, sql } from 'drizzle-orm';
import { db } from '@/db';
import { drivers, laps, results, sessions, teams } from '@/db/schema';

import { getName } from 'i18n-nationality';
import { default as formatDuration } from 'format-duration';

import DashboardLayout from './DashboardLayout.astro';

export interface Props {
  sessionType: 'p' | 'q';
}

const { roundId } = Astro.params;
const { roundName } = Astro.locals;
const { sessionType } = Astro.props;
const title = (sessionType === 'p' ? ' Practice ' : ' Qualifying ') + 'Results';

const sessionIdToUse = db.$with('session_id_to_use').as(
  db
    .select({ id: sessions.id })
    .from(sessions)
    .where(
      and(eq(sessions.roundId, Number(roundId)), eq(sessions.type, sessionType))
    )
);

const lapRankingsGroupedByDrivers = db
  .$with('lap_rankings_grouped_by_drivers')
  .as(
    db
      .select({
        driverId: laps.driverId,
        sector1TimeMs: laps.sector1TimeMs,
        sector2TimeMs: laps.sector2TimeMs,
        sector3TimeMs: laps.sector3TimeMs,
        totalTimeMs: laps.totalTimeMs,
        lapTimeRowNum: sql<number>`
          ROW_NUMBER() OVER(
            PARTITION BY
              ${laps.driverId}
            ORDER BY
              ${laps.totalTimeMs} ASC,
              ${laps.lapNumber} ASC
          )
        `
          .mapWith(Number)
          .as('lap_time_row_num')
      })
      .from(laps)
      .where(
        and(
          inArray(laps.sessionId, db.select().from(sessionIdToUse)),
          eq(laps.valid, true),
          gt(laps.sector1TimeMs, 0),
          gt(laps.sector2TimeMs, 0),
          gt(laps.sector3TimeMs, 0)
        )
      )
  );

const driversPersonalBestLaps = db
  .$with('drivers_personal_best_laps')
  .as(
    db
      .select()
      .from(lapRankingsGroupedByDrivers)
      .where(eq(lapRankingsGroupedByDrivers.lapTimeRowNum, 1))
  );

const sessionResults = await db
  .with(sessionIdToUse, lapRankingsGroupedByDrivers, driversPersonalBestLaps)
  .select({
    position: results.position,
    driverId: results.driverId,
    firstName: drivers.firstName,
    lastName: drivers.lastName,
    nationality: drivers.countryCode,
    team: teams.name,
    sector1TimeMs: driversPersonalBestLaps.sector1TimeMs,
    sector2TimeMs: driversPersonalBestLaps.sector2TimeMs,
    sector3TimeMs: driversPersonalBestLaps.sector3TimeMs,
    totalTimeMs: driversPersonalBestLaps.totalTimeMs
  })
  .from(driversPersonalBestLaps)
  .rightJoin(results, eq(driversPersonalBestLaps.driverId, results.driverId))
  .innerJoin(drivers, eq(results.driverId, drivers.id))
  .innerJoin(teams, eq(drivers.teamId, teams.id))
  .where(inArray(results.sessionId, db.select().from(sessionIdToUse)))
  .orderBy(asc(results.position));
---

<DashboardLayout title={title}>
  <h1 class="text-4xl text-center font-bold mb-6">
    {roundName} - {title}
  </h1>
  <div class="lg:px-0 px-4 relative overflow-x-auto">
    <table
      class="lg:w-3/4 w-5/6 md:mx-auto border dark:border-gray-700 text-left dark:text-gray-400"
    >
      <thead
        class="text-center text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
      >
        <tr>
          <th scope="col" class="px-6 py-3">Position</th>
          <th scope="col" class="px-6 py-3">Car</th>
          <th scope="col" class="px-6 py-3">Nationality</th>
          <th scope="col" class="px-6 py-3">Driver</th>
          <th scope="col" class="px-6 py-3">Team</th>
          <th scope="col" class="px-6 py-3">Sector 1</th>
          <th scope="col" class="px-6 py-3">Sector 2</th>
          <th scope="col" class="px-6 py-3">Sector 3</th>
          <th scope="col" class="px-6 py-3">Total</th>
        </tr>
      </thead>
      <tbody>
        {
          sessionResults.map((result) => (
            <tr class="text-center bg-white border-b dark:bg-gray-900 dark:border-gray-700">
              <td class="px-6 py-4">{result.position}</td>
              <td class="px-6 py-4">{result.driverId}</td>
              <td class="py-4">
                <img
                  class="mx-auto"
                  src={`https://flagcdn.com/24x18/${result.nationality}.png`}
                  srcset={`https://flagcdn.com/48x36/${result.nationality}.png 2x https://flagcdn.com/72x54/${result.nationality}.png 3x`}
                  width="24"
                  height="18"
                  title={getName(result.nationality, 'en')}
                  alt={getName(result.nationality, 'en')}
                />
              </td>
              <td class="px-6 py-4">
                {result.firstName} {result.lastName}
              </td>
              <td class="px-6 py-4 uppercase">{result.team}</td>
              <td class="px-6 py-4">
                {result.sector1TimeMs
                  ? formatDuration(result.sector1TimeMs, { ms: true }).replace(
                      '0:',
                      ''
                    )
                  : 'N/A'}
              </td>
              <td class="px-6 py-4">
                {result.sector2TimeMs
                  ? formatDuration(result.sector2TimeMs, { ms: true }).replace(
                      '0:',
                      ''
                    )
                  : 'N/A'}
              </td>
              <td class="px-6 py-4">
                {result.sector3TimeMs
                  ? formatDuration(result.sector3TimeMs, { ms: true }).replace(
                      '0:',
                      ''
                    )
                  : 'N/A'}
              </td>
              <td class="px-6 py-4">
                {result.totalTimeMs
                  ? formatDuration(result.totalTimeMs, { ms: true })
                  : 'N/A'}
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </div>
</DashboardLayout>
